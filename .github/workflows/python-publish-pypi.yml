name: Publish denonavr on PyPI

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  verify:
    runs-on: ubuntu-20.04

    name: Verify Python build context
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Verify version
      run: |
        python -m pip install setuptools
        setup_version="$(python setup.py -V)"
        branch_version=$(echo "${{ github.ref }}" | awk -F"/" '{print $NF}' )
        if [ "${setup_version}" == "${branch_version}" ]; then
          echo "Version of tag ${branch_version} matches with version of setup.py ${setup_version}"
        else
          echo "Version of tag ${branch_version} doesn't match with version of setup.py ${setup_version}"
          exit 1
        fi
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pylint
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f test-requirements.txt ]; then pip install -r test-requirements.txt; fi
    - name: Analysing the code with pylint
      run: |
        pylint denonavr tests
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 denonavr tests --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings.
        flake8 denonavr tests --count --exit-zero --max-line-length=79 --statistics
    - name: Integration test with pytest
      run: |
        python -m pytest tests --timeout=30 --durations=10

  build:
    name: Build and publish PyPi package
    needs: verify
    runs-on: ubuntu-20.04
    if: github.repository_owner == 'ol-iver'
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade build
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@717ba43cfbb0387f6ce311b169a825772f54d295  # v1.5.0
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
